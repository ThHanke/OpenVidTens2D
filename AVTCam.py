# This module was generated by the wx.activex.GernerateAXModule class
# (See also the genaxmodule script.)

import wx
import wx.activex

clsID = '{6E4688A6-4FCE-40FF-9D27-8AC603C7BF43}'
progID = 'AVTActiveCam.AVTActiveCam.1'



# Create eventTypes and event binders
wxEVT_FrameAcquired = wx.activex.RegisterActiveXEvent('FrameAcquired')
wxEVT_Timeout = wx.activex.RegisterActiveXEvent('Timeout')
wxEVT_FrameDropped = wx.activex.RegisterActiveXEvent('FrameDropped')
wxEVT_MouseDown = wx.activex.RegisterActiveXEvent('MouseDown')
wxEVT_MouseUp = wx.activex.RegisterActiveXEvent('MouseUp')
wxEVT_MouseMove = wx.activex.RegisterActiveXEvent('MouseMove')
wxEVT_Scroll = wx.activex.RegisterActiveXEvent('Scroll')
wxEVT_FormatChanged = wx.activex.RegisterActiveXEvent('FormatChanged')
wxEVT_MouseDblClick = wx.activex.RegisterActiveXEvent('MouseDblClick')
wxEVT_FrameAcquiredX = wx.activex.RegisterActiveXEvent('FrameAcquiredX')
wxEVT_CameraPlugged = wx.activex.RegisterActiveXEvent('CameraPlugged')
wxEVT_CameraUnplugged = wx.activex.RegisterActiveXEvent('CameraUnplugged')

EVT_FrameAcquired = wx.PyEventBinder(wxEVT_FrameAcquired, 1)
EVT_Timeout = wx.PyEventBinder(wxEVT_Timeout, 1)
EVT_FrameDropped = wx.PyEventBinder(wxEVT_FrameDropped, 1)
EVT_MouseDown = wx.PyEventBinder(wxEVT_MouseDown, 1)
EVT_MouseUp = wx.PyEventBinder(wxEVT_MouseUp, 1)
EVT_MouseMove = wx.PyEventBinder(wxEVT_MouseMove, 1)
EVT_Scroll = wx.PyEventBinder(wxEVT_Scroll, 1)
EVT_FormatChanged = wx.PyEventBinder(wxEVT_FormatChanged, 1)
EVT_MouseDblClick = wx.PyEventBinder(wxEVT_MouseDblClick, 1)
EVT_FrameAcquiredX = wx.PyEventBinder(wxEVT_FrameAcquiredX, 1)
EVT_CameraPlugged = wx.PyEventBinder(wxEVT_CameraPlugged, 1)
EVT_CameraUnplugged = wx.PyEventBinder(wxEVT_CameraUnplugged, 1)


# Derive a new class from ActiveXWindow
class AVTCam(wx.activex.ActiveXWindow):
    def __init__(self, parent, ID=-1, pos=wx.DefaultPosition,
                 size=wx.DefaultSize, style=0, name='AVTCam'):
        wx.activex.ActiveXWindow.__init__(self, parent,
            wx.activex.CLSID(clsID),
            ID, pos, size, style, name)
        
    # Methods exported by the ActiveX object
    def QueryInterface(self, riid):
        return self.CallAXMethod('QueryInterface', riid)

    def AddRef(self):
        return self.CallAXMethod('AddRef')

    def Release(self):
        return self.CallAXMethod('Release')

    def GetTypeInfoCount(self):
        return self.CallAXMethod('GetTypeInfoCount')

    def GetTypeInfo(self, itinfo, lcid):
        return self.CallAXMethod('GetTypeInfo', itinfo, lcid)

    def GetIDsOfNames(self, riid, rgszNames, cNames, lcid):
        return self.CallAXMethod('GetIDsOfNames', riid, rgszNames, cNames, lcid)

    def Invoke(self, dispidMember, riid, lcid, wFlags, pdispparams):
        return self.CallAXMethod('Invoke', dispidMember, riid, lcid, wFlags, pdispparams)

    def Grab(self):
        return self.CallAXMethod('Grab')

    def AboutBox(self):
        return self.CallAXMethod('AboutBox')

    def GetBrightnessMin(self):
        return self.CallAXMethod('GetBrightnessMin')

    def GetBrightnessMax(self):
        return self.CallAXMethod('GetBrightnessMax')

    def GetExposureMin(self):
        return self.CallAXMethod('GetExposureMin')

    def GetExposureMax(self):
        return self.CallAXMethod('GetExposureMax')

    def GetSharpnessMin(self):
        return self.CallAXMethod('GetSharpnessMin')

    def GetSharpnessMax(self):
        return self.CallAXMethod('GetSharpnessMax')

    def GetWhiteBalanceMin(self):
        return self.CallAXMethod('GetWhiteBalanceMin')

    def GetWhiteBalanceMax(self):
        return self.CallAXMethod('GetWhiteBalanceMax')

    def GetHueMin(self):
        return self.CallAXMethod('GetHueMin')

    def GetHueMax(self):
        return self.CallAXMethod('GetHueMax')

    def GetSaturationMin(self):
        return self.CallAXMethod('GetSaturationMin')

    def GetSaturationMax(self):
        return self.CallAXMethod('GetSaturationMax')

    def GetGammaMin(self):
        return self.CallAXMethod('GetGammaMin')

    def GetGammaMax(self):
        return self.CallAXMethod('GetGammaMax')

    def GetShutterMin(self):
        return self.CallAXMethod('GetShutterMin')

    def GetShutterMax(self):
        return self.CallAXMethod('GetShutterMax')

    def GetGainMin(self):
        return self.CallAXMethod('GetGainMin')

    def GetGainMax(self):
        return self.CallAXMethod('GetGainMax')

    def GetIrisMin(self):
        return self.CallAXMethod('GetIrisMin')

    def GetIrisMax(self):
        return self.CallAXMethod('GetIrisMax')

    def GetFocusMin(self):
        return self.CallAXMethod('GetFocusMin')

    def GetFocusMax(self):
        return self.CallAXMethod('GetFocusMax')

    def GetZoomMin(self):
        return self.CallAXMethod('GetZoomMin')

    def GetZoomMax(self):
        return self.CallAXMethod('GetZoomMax')

    def GetPanMin(self):
        return self.CallAXMethod('GetPanMin')

    def GetPanMax(self):
        return self.CallAXMethod('GetPanMax')

    def GetTiltMin(self):
        return self.CallAXMethod('GetTiltMin')

    def GetTiltMax(self):
        return self.CallAXMethod('GetTiltMax')

    def GetOpticalFilterMin(self):
        return self.CallAXMethod('GetOpticalFilterMin')

    def GetOpticalFilterMax(self):
        return self.CallAXMethod('GetOpticalFilterMax')

    def GetTriggerDelayMin(self):
        return self.CallAXMethod('GetTriggerDelayMin')

    def GetTriggerDelayMax(self):
        return self.CallAXMethod('GetTriggerDelayMax')

    def GetWhiteShadingMin(self):
        return self.CallAXMethod('GetWhiteShadingMin')

    def GetWhiteShadingMax(self):
        return self.CallAXMethod('GetWhiteShadingMax')

    def ReadBlock(self, offset, pData, nBytes):
        return self.CallAXMethod('ReadBlock', offset, pData, nBytes)

    def WriteBlock(self, offset, pData, nBytes):
        return self.CallAXMethod('WriteBlock', offset, pData, nBytes)

    def GetRawData(self, isPointer):
        return self.CallAXMethod('GetRawData', isPointer)

    def GetImageWindow(self, x, y, sx, sy):
        return self.CallAXMethod('GetImageWindow', x, y, sx, sy)

    def GetPixel(self, x, y):
        return self.CallAXMethod('GetPixel', x, y)

    def GetRGBPixel(self, x, y):
        return self.CallAXMethod('GetRGBPixel', x, y)

    def GetImageLine(self, y):
        return self.CallAXMethod('GetImageLine', y)

    def GetComponentLine(self, y, component):
        return self.CallAXMethod('GetComponentLine', y, component)

    def GetImageData(self):
        return self.CallAXMethod('GetImageData')

    def GetComponentData(self, component):
        return self.CallAXMethod('GetComponentData', component)

    def GetImagePointer(self, x, y):
        return self.CallAXMethod('GetImagePointer', x, y)

    def SaveImage(self, filepath, compression):
        return self.CallAXMethod('SaveImage', filepath, compression)

    def SoftTrigger(self, newVal):
        return self.CallAXMethod('SoftTrigger', newVal)

    def GetWidth(self):
        return self.CallAXMethod('GetWidth')

    def GetHeight(self):
        return self.CallAXMethod('GetHeight')

    def GetBytesPerPixel(self):
        return self.CallAXMethod('GetBytesPerPixel')

    def ReadRegister(self, address):
        return self.CallAXMethod('ReadRegister', address)

    def WriteRegister(self, address, Val):
        return self.CallAXMethod('WriteRegister', address, Val)

    def GetCameraList(self):
        return self.CallAXMethod('GetCameraList')

    def GetModeList(self):
        return self.CallAXMethod('GetModeList')

    def GetRateList(self):
        return self.CallAXMethod('GetRateList')

    def GetTriggerList(self):
        return self.CallAXMethod('GetTriggerList')

    def StartCapture(self, filepath, timelapse, playrate):
        return self.CallAXMethod('StartCapture', filepath, timelapse, playrate)

    def StopCapture(self):
        return self.CallAXMethod('StopCapture')

    def LoadChannel(self, channel):
        return self.CallAXMethod('LoadChannel', channel)

    def SaveChannel(self, channel):
        return self.CallAXMethod('SaveChannel', channel)

    def GetMaxChannel(self):
        return self.CallAXMethod('GetMaxChannel')

    def GetIsoSpeed(self):
        return self.CallAXMethod('GetIsoSpeed')

    def SetIsoSpeed(self, value):
        return self.CallAXMethod('SetIsoSpeed', value)

    def ShowProperties(self, EnableCamList, Page):
        return self.CallAXMethod('ShowProperties', EnableCamList, Page)

    def GetDIB(self):
        return self.CallAXMethod('GetDIB')

    def SetImageWindow(self, x, y, value):
        return self.CallAXMethod('SetImageWindow', x, y, value)

    def GetTriggerInfo(self):
        return self.CallAXMethod('GetTriggerInfo')

    def GetF7Info(self):
        return self.CallAXMethod('GetF7Info')

    def GetPicture(self):
        return self.CallAXMethod('GetPicture')

    def Draw(self):
        return self.CallAXMethod('Draw')

    def OverlayRectangle(self, StartX, StartY, EndX, EndY, Width):
        return self.CallAXMethod('OverlayRectangle', StartX, StartY, EndX, EndY, Width)

    def OverlayEllipse(self, StartX, StartY, EndX, EndY, Width):
        return self.CallAXMethod('OverlayEllipse', StartX, StartY, EndX, EndY, Width)

    def OverlayLine(self, StartX, StartY, EndX, EndY, Width):
        return self.CallAXMethod('OverlayLine', StartX, StartY, EndX, EndY, Width)

    def OverlayText(self, x, y, str):
        return self.CallAXMethod('OverlayText', x, y, str)

    def OverlayClear(self):
        return self.CallAXMethod('OverlayClear')

    def OverlayPixel(self, x, y):
        return self.CallAXMethod('OverlayPixel', x, y)

    def GetItemList(self, item):
        return self.CallAXMethod('GetItemList', item)

    def IsControls(self):
        return self.CallAXMethod('IsControls')

    def ReadPIO(self):
        return self.CallAXMethod('ReadPIO')

    def WritePIO(self, value):
        return self.CallAXMethod('WritePIO', value)

    def SetSIO(self, settings):
        return self.CallAXMethod('SetSIO', settings)

    def ReadSIO(self, count, Timeout):
        return self.CallAXMethod('ReadSIO', count, Timeout)

    def WriteSIO(self, str, Timeout):
        return self.CallAXMethod('WriteSIO', str, Timeout)

    def SetStrobe(self, index, duration, delay, polarity):
        return self.CallAXMethod('SetStrobe', index, duration, delay, polarity)

    def LoadSettings(self, profile):
        return self.CallAXMethod('LoadSettings', profile)

    def SaveSettings(self, profile):
        return self.CallAXMethod('SaveSettings', profile)

    def DrawText(self, x, y, str, red, green, blue, opacity):
        return self.CallAXMethod('DrawText', x, y, str, red, green, blue, opacity)

    def DrawLine(self, X1, Y1, X2, Y2, Width, red, green, blue, opacity):
        return self.CallAXMethod('DrawLine', X1, Y1, X2, Y2, Width, red, green, blue, opacity)

    def DrawRectangle(self, X1, Y1, X2, Y2, Width, red, green, blue, opacity):
        return self.CallAXMethod('DrawRectangle', X1, Y1, X2, Y2, Width, red, green, blue, opacity)

    def DrawEllipse(self, X1, Y1, X2, Y2, Width, red, green, blue, opacity):
        return self.CallAXMethod('DrawEllipse', X1, Y1, X2, Y2, Width, red, green, blue, opacity)

    def DrawPixel(self, x, y, red, green, blue, opacity):
        return self.CallAXMethod('DrawPixel', x, y, red, green, blue, opacity)

    def GetHistogram(self, component, bins, step):
        return self.CallAXMethod('GetHistogram', component, bins, step)

    def GetImageStat(self, component, step):
        return self.CallAXMethod('GetImageStat', component, step)

    def SetROI(self, X1, Y1, X2, Y2, l1, l2):
        return self.CallAXMethod('SetROI', X1, Y1, X2, Y2, l1, l2)

    def GetROI(self):
        return self.CallAXMethod('GetROI')

    def SaveBkg(self, Mode, frames):
        return self.CallAXMethod('SaveBkg', Mode, frames)

    def ShowCompressionDlg(self):
        return self.CallAXMethod('ShowCompressionDlg')

    def GetCodecList(self):
        return self.CallAXMethod('GetCodecList')

    def SetCodec(self, name, quality, datarate, keyframe):
        return self.CallAXMethod('SetCodec', name, quality, datarate, keyframe)

    def ShowCodecDlg(self):
        return self.CallAXMethod('ShowCodecDlg')

    def GetCodec(self):
        return self.CallAXMethod('GetCodec')

    # Getters, Setters and properties
    def _get_BackColor(self):
        return self.GetAXProp('BackColor')
    def _set_BackColor(self, BackColor):
        self.SetAXProp('BackColor', BackColor)
    backcolor = property(_get_BackColor, _set_BackColor)

    def _get_Enabled(self):
        return self.GetAXProp('Enabled')
    def _set_Enabled(self, Enabled):
        self.SetAXProp('Enabled', Enabled)
    enabled = property(_get_Enabled, _set_Enabled)

    def _get_Font(self):
        return self.GetAXProp('Font')
    def _set_Font(self, Font):
        self.SetAXProp('Font', Font)
    font = property(_get_Font, _set_Font)

    def _get_SizeX(self):
        return self.GetAXProp('SizeX')
    def _set_SizeX(self, SizeX):
        self.SetAXProp('SizeX', SizeX)
    sizex = property(_get_SizeX, _set_SizeX)

    def _get_SizeY(self):
        return self.GetAXProp('SizeY')
    def _set_SizeY(self, SizeY):
        self.SetAXProp('SizeY', SizeY)
    sizey = property(_get_SizeY, _set_SizeY)

    def _get_StartX(self):
        return self.GetAXProp('StartX')
    def _set_StartX(self, StartX):
        self.SetAXProp('StartX', StartX)
    startx = property(_get_StartX, _set_StartX)

    def _get_StartY(self):
        return self.GetAXProp('StartY')
    def _set_StartY(self, StartY):
        self.SetAXProp('StartY', StartY)
    starty = property(_get_StartY, _set_StartY)

    def _get_Acquire(self):
        return self.GetAXProp('Acquire')
    def _set_Acquire(self, Acquire):
        self.SetAXProp('Acquire', Acquire)
    acquire = property(_get_Acquire, _set_Acquire)

    def _get_Magnification(self):
        return self.GetAXProp('Magnification')
    def _set_Magnification(self, Magnification):
        self.SetAXProp('Magnification', Magnification)
    magnification = property(_get_Magnification, _set_Magnification)

    def _get_ScrollBars(self):
        return self.GetAXProp('ScrollBars')
    def _set_ScrollBars(self, ScrollBars):
        self.SetAXProp('ScrollBars', ScrollBars)
    scrollbars = property(_get_ScrollBars, _set_ScrollBars)

    def _get_ScrollX(self):
        return self.GetAXProp('ScrollX')
    def _set_ScrollX(self, ScrollX):
        self.SetAXProp('ScrollX', ScrollX)
    scrollx = property(_get_ScrollX, _set_ScrollX)

    def _get_ScrollY(self):
        return self.GetAXProp('ScrollY')
    def _set_ScrollY(self, ScrollY):
        self.SetAXProp('ScrollY', ScrollY)
    scrolly = property(_get_ScrollY, _set_ScrollY)

    def _get_Palette(self):
        return self.GetAXProp('Palette')
    def _set_Palette(self, Palette):
        self.SetAXProp('Palette', Palette)
    palette = property(_get_Palette, _set_Palette)

    def _get_Edge(self):
        return self.GetAXProp('Edge')
    def _set_Edge(self, Edge):
        self.SetAXProp('Edge', Edge)
    edge = property(_get_Edge, _set_Edge)

    def _get_Camera(self):
        return self.GetAXProp('Camera')
    def _set_Camera(self, Camera):
        self.SetAXProp('Camera', Camera)
    camera = property(_get_Camera, _set_Camera)

    def _get_Mode(self):
        return self.GetAXProp('Mode')
    def _set_Mode(self, Mode):
        self.SetAXProp('Mode', Mode)
    mode = property(_get_Mode, _set_Mode)

    def _get_Rate(self):
        return self.GetAXProp('Rate')
    def _set_Rate(self, Rate):
        self.SetAXProp('Rate', Rate)
    rate = property(_get_Rate, _set_Rate)

    def _get_Trigger(self):
        return self.GetAXProp('Trigger')
    def _set_Trigger(self, Trigger):
        self.SetAXProp('Trigger', Trigger)
    trigger = property(_get_Trigger, _set_Trigger)

    def _get_TriggerMode(self):
        return self.GetAXProp('TriggerMode')
    def _set_TriggerMode(self, TriggerMode):
        self.SetAXProp('TriggerMode', TriggerMode)
    triggermode = property(_get_TriggerMode, _set_TriggerMode)

    def _get_TriggerCounter(self):
        return self.GetAXProp('TriggerCounter')
    def _set_TriggerCounter(self, TriggerCounter):
        self.SetAXProp('TriggerCounter', TriggerCounter)
    triggercounter = property(_get_TriggerCounter, _set_TriggerCounter)

    def _get_TriggerPolarity(self):
        return self.GetAXProp('TriggerPolarity')
    def _set_TriggerPolarity(self, TriggerPolarity):
        self.SetAXProp('TriggerPolarity', TriggerPolarity)
    triggerpolarity = property(_get_TriggerPolarity, _set_TriggerPolarity)

    def _get_Asynch(self):
        return self.GetAXProp('Asynch')
    def _set_Asynch(self, Asynch):
        self.SetAXProp('Asynch', Asynch)
    asynch = property(_get_Asynch, _set_Asynch)

    def _get_PacketSize(self):
        return self.GetAXProp('PacketSize')
    def _set_PacketSize(self, PacketSize):
        self.SetAXProp('PacketSize', PacketSize)
    packetsize = property(_get_PacketSize, _set_PacketSize)

    def _get_SwapBytes(self):
        return self.GetAXProp('SwapBytes')
    def _set_SwapBytes(self, SwapBytes):
        self.SetAXProp('SwapBytes', SwapBytes)
    swapbytes = property(_get_SwapBytes, _set_SwapBytes)

    def _get_Bayer(self):
        return self.GetAXProp('Bayer')
    def _set_Bayer(self, Bayer):
        self.SetAXProp('Bayer', Bayer)
    bayer = property(_get_Bayer, _set_Bayer)

    def _get_BayerLayout(self):
        return self.GetAXProp('BayerLayout')
    def _set_BayerLayout(self, BayerLayout):
        self.SetAXProp('BayerLayout', BayerLayout)
    bayerlayout = property(_get_BayerLayout, _set_BayerLayout)

    def _get_Display(self):
        return self.GetAXProp('Display')
    def _set_Display(self, Display):
        self.SetAXProp('Display', Display)
    display = property(_get_Display, _set_Display)

    def _get_Flip(self):
        return self.GetAXProp('Flip')
    def _set_Flip(self, Flip):
        self.SetAXProp('Flip', Flip)
    flip = property(_get_Flip, _set_Flip)

    def _get_Brightness(self):
        return self.GetAXProp('Brightness')
    def _set_Brightness(self, Brightness):
        self.SetAXProp('Brightness', Brightness)
    brightness = property(_get_Brightness, _set_Brightness)

    def _get_BrightnessControl(self):
        return self.GetAXProp('BrightnessControl')
    def _set_BrightnessControl(self, BrightnessControl):
        self.SetAXProp('BrightnessControl', BrightnessControl)
    brightnesscontrol = property(_get_BrightnessControl, _set_BrightnessControl)

    def _get_AutoExposureRef(self):
        return self.GetAXProp('AutoExposureRef')
    def _set_AutoExposureRef(self, AutoExposureRef):
        self.SetAXProp('AutoExposureRef', AutoExposureRef)
    autoexposureref = property(_get_AutoExposureRef, _set_AutoExposureRef)

    def _get_AutoExposure(self):
        return self.GetAXProp('AutoExposure')
    def _set_AutoExposure(self, AutoExposure):
        self.SetAXProp('AutoExposure', AutoExposure)
    autoexposure = property(_get_AutoExposure, _set_AutoExposure)

    def _get_Sharpness(self):
        return self.GetAXProp('Sharpness')
    def _set_Sharpness(self, Sharpness):
        self.SetAXProp('Sharpness', Sharpness)
    sharpness = property(_get_Sharpness, _set_Sharpness)

    def _get_SharpnessControl(self):
        return self.GetAXProp('SharpnessControl')
    def _set_SharpnessControl(self, SharpnessControl):
        self.SetAXProp('SharpnessControl', SharpnessControl)
    sharpnesscontrol = property(_get_SharpnessControl, _set_SharpnessControl)

    def _get_Gamma(self):
        return self.GetAXProp('Gamma')
    def _set_Gamma(self, Gamma):
        self.SetAXProp('Gamma', Gamma)
    gamma = property(_get_Gamma, _set_Gamma)

    def _get_GammaControl(self):
        return self.GetAXProp('GammaControl')
    def _set_GammaControl(self, GammaControl):
        self.SetAXProp('GammaControl', GammaControl)
    gammacontrol = property(_get_GammaControl, _set_GammaControl)

    def _get_Shutter(self):
        return self.GetAXProp('Shutter')
    def _set_Shutter(self, Shutter):
        self.SetAXProp('Shutter', Shutter)
    shutter = property(_get_Shutter, _set_Shutter)

    def _get_ShutterControl(self):
        return self.GetAXProp('ShutterControl')
    def _set_ShutterControl(self, ShutterControl):
        self.SetAXProp('ShutterControl', ShutterControl)
    shuttercontrol = property(_get_ShutterControl, _set_ShutterControl)

    def _get_Gain(self):
        return self.GetAXProp('Gain')
    def _set_Gain(self, Gain):
        self.SetAXProp('Gain', Gain)
    gain = property(_get_Gain, _set_Gain)

    def _get_GainControl(self):
        return self.GetAXProp('GainControl')
    def _set_GainControl(self, GainControl):
        self.SetAXProp('GainControl', GainControl)
    gaincontrol = property(_get_GainControl, _set_GainControl)

    def _get_Iris(self):
        return self.GetAXProp('Iris')
    def _set_Iris(self, Iris):
        self.SetAXProp('Iris', Iris)
    iris = property(_get_Iris, _set_Iris)

    def _get_IrisControl(self):
        return self.GetAXProp('IrisControl')
    def _set_IrisControl(self, IrisControl):
        self.SetAXProp('IrisControl', IrisControl)
    iriscontrol = property(_get_IrisControl, _set_IrisControl)

    def _get_WhiteBalanceUB(self):
        return self.GetAXProp('WhiteBalanceUB')
    def _set_WhiteBalanceUB(self, WhiteBalanceUB):
        self.SetAXProp('WhiteBalanceUB', WhiteBalanceUB)
    whitebalanceub = property(_get_WhiteBalanceUB, _set_WhiteBalanceUB)

    def _get_WhiteBalanceVR(self):
        return self.GetAXProp('WhiteBalanceVR')
    def _set_WhiteBalanceVR(self, WhiteBalanceVR):
        self.SetAXProp('WhiteBalanceVR', WhiteBalanceVR)
    whitebalancevr = property(_get_WhiteBalanceVR, _set_WhiteBalanceVR)

    def _get_WhiteBalanceControl(self):
        return self.GetAXProp('WhiteBalanceControl')
    def _set_WhiteBalanceControl(self, WhiteBalanceControl):
        self.SetAXProp('WhiteBalanceControl', WhiteBalanceControl)
    whitebalancecontrol = property(_get_WhiteBalanceControl, _set_WhiteBalanceControl)

    def _get_Hue(self):
        return self.GetAXProp('Hue')
    def _set_Hue(self, Hue):
        self.SetAXProp('Hue', Hue)
    hue = property(_get_Hue, _set_Hue)

    def _get_HueControl(self):
        return self.GetAXProp('HueControl')
    def _set_HueControl(self, HueControl):
        self.SetAXProp('HueControl', HueControl)
    huecontrol = property(_get_HueControl, _set_HueControl)

    def _get_Saturation(self):
        return self.GetAXProp('Saturation')
    def _set_Saturation(self, Saturation):
        self.SetAXProp('Saturation', Saturation)
    saturation = property(_get_Saturation, _set_Saturation)

    def _get_SaturationControl(self):
        return self.GetAXProp('SaturationControl')
    def _set_SaturationControl(self, SaturationControl):
        self.SetAXProp('SaturationControl', SaturationControl)
    saturationcontrol = property(_get_SaturationControl, _set_SaturationControl)

    def _get_Focus(self):
        return self.GetAXProp('Focus')
    def _set_Focus(self, Focus):
        self.SetAXProp('Focus', Focus)
    focus = property(_get_Focus, _set_Focus)

    def _get_FocusControl(self):
        return self.GetAXProp('FocusControl')
    def _set_FocusControl(self, FocusControl):
        self.SetAXProp('FocusControl', FocusControl)
    focuscontrol = property(_get_FocusControl, _set_FocusControl)

    def _get_Zoom(self):
        return self.GetAXProp('Zoom')
    def _set_Zoom(self, Zoom):
        self.SetAXProp('Zoom', Zoom)
    zoom = property(_get_Zoom, _set_Zoom)

    def _get_ZoomControl(self):
        return self.GetAXProp('ZoomControl')
    def _set_ZoomControl(self, ZoomControl):
        self.SetAXProp('ZoomControl', ZoomControl)
    zoomcontrol = property(_get_ZoomControl, _set_ZoomControl)

    def _get_Pan(self):
        return self.GetAXProp('Pan')
    def _set_Pan(self, Pan):
        self.SetAXProp('Pan', Pan)
    pan = property(_get_Pan, _set_Pan)

    def _get_PanControl(self):
        return self.GetAXProp('PanControl')
    def _set_PanControl(self, PanControl):
        self.SetAXProp('PanControl', PanControl)
    pancontrol = property(_get_PanControl, _set_PanControl)

    def _get_Tilt(self):
        return self.GetAXProp('Tilt')
    def _set_Tilt(self, Tilt):
        self.SetAXProp('Tilt', Tilt)
    tilt = property(_get_Tilt, _set_Tilt)

    def _get_TiltControl(self):
        return self.GetAXProp('TiltControl')
    def _set_TiltControl(self, TiltControl):
        self.SetAXProp('TiltControl', TiltControl)
    tiltcontrol = property(_get_TiltControl, _set_TiltControl)

    def _get_Temperature(self):
        return self.GetAXProp('Temperature')
    def _set_Temperature(self, Temperature):
        self.SetAXProp('Temperature', Temperature)
    temperature = property(_get_Temperature, _set_Temperature)

    def _get_TemperatureControl(self):
        return self.GetAXProp('TemperatureControl')
    def _set_TemperatureControl(self, TemperatureControl):
        self.SetAXProp('TemperatureControl', TemperatureControl)
    temperaturecontrol = property(_get_TemperatureControl, _set_TemperatureControl)

    def _get_OpticalFilter(self):
        return self.GetAXProp('OpticalFilter')
    def _set_OpticalFilter(self, OpticalFilter):
        self.SetAXProp('OpticalFilter', OpticalFilter)
    opticalfilter = property(_get_OpticalFilter, _set_OpticalFilter)

    def _get_OpticalFilterControl(self):
        return self.GetAXProp('OpticalFilterControl')
    def _set_OpticalFilterControl(self, OpticalFilterControl):
        self.SetAXProp('OpticalFilterControl', OpticalFilterControl)
    opticalfiltercontrol = property(_get_OpticalFilterControl, _set_OpticalFilterControl)

    def _get_TriggerDelay(self):
        return self.GetAXProp('TriggerDelay')
    def _set_TriggerDelay(self, TriggerDelay):
        self.SetAXProp('TriggerDelay', TriggerDelay)
    triggerdelay = property(_get_TriggerDelay, _set_TriggerDelay)

    def _get_WhiteShading(self):
        return self.GetAXProp('WhiteShading')
    def _set_WhiteShading(self, WhiteShading):
        self.SetAXProp('WhiteShading', WhiteShading)
    whiteshading = property(_get_WhiteShading, _set_WhiteShading)

    def _get_WhiteShadingControl(self):
        return self.GetAXProp('WhiteShadingControl')
    def _set_WhiteShadingControl(self, WhiteShadingControl):
        self.SetAXProp('WhiteShadingControl', WhiteShadingControl)
    whiteshadingcontrol = property(_get_WhiteShadingControl, _set_WhiteShadingControl)

    def _get_OverlayColor(self):
        return self.GetAXProp('OverlayColor')
    def _set_OverlayColor(self, OverlayColor):
        self.SetAXProp('OverlayColor', OverlayColor)
    overlaycolor = property(_get_OverlayColor, _set_OverlayColor)

    def _get_Overlay(self):
        return self.GetAXProp('Overlay')
    def _set_Overlay(self, Overlay):
        self.SetAXProp('Overlay', Overlay)
    overlay = property(_get_Overlay, _set_Overlay)

    def _get_OverlayFont(self):
        return self.GetAXProp('OverlayFont')
    def _set_OverlayFont(self, OverlayFont):
        self.SetAXProp('OverlayFont', OverlayFont)
    overlayfont = property(_get_OverlayFont, _set_OverlayFont)

    def _get_BkgCorrect(self):
        return self.GetAXProp('BkgCorrect')
    def _set_BkgCorrect(self, BkgCorrect):
        self.SetAXProp('BkgCorrect', BkgCorrect)
    bkgcorrect = property(_get_BkgCorrect, _set_BkgCorrect)

    def _get_BkgName(self):
        return self.GetAXProp('BkgName')
    def _set_BkgName(self, BkgName):
        self.SetAXProp('BkgName', BkgName)
    bkgname = property(_get_BkgName, _set_BkgName)

    def _get_TriggerSource(self):
        return self.GetAXProp('TriggerSource')
    def _set_TriggerSource(self, TriggerSource):
        self.SetAXProp('TriggerSource', TriggerSource)
    triggersource = property(_get_TriggerSource, _set_TriggerSource)

    def _get_BitShift(self):
        return self.GetAXProp('BitShift')
    def _set_BitShift(self, BitShift):
        self.SetAXProp('BitShift', BitShift)
    bitshift = property(_get_BitShift, _set_BitShift)

    def _get_Timeout(self):
        return self.GetAXProp('Timeout')
    def _set_Timeout(self, Timeout):
        self.SetAXProp('Timeout', Timeout)
    timeout = property(_get_Timeout, _set_Timeout)

    def _get_AntiTearing(self):
        return self.GetAXProp('AntiTearing')
    def _set_AntiTearing(self, AntiTearing):
        self.SetAXProp('AntiTearing', AntiTearing)
    antitearing = property(_get_AntiTearing, _set_AntiTearing)

    def _get_Rotate(self):
        return self.GetAXProp('Rotate')
    def _set_Rotate(self, Rotate):
        self.SetAXProp('Rotate', Rotate)
    rotate = property(_get_Rotate, _set_Rotate)


#  PROPERTIES
#  --------------------
#  backcolor
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  enabled
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  font
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  sizex
#      type:int  arg:int  canGet:True  canSet:True
#  
#  sizey
#      type:int  arg:int  canGet:True  canSet:True
#  
#  startx
#      type:int  arg:int  canGet:True  canSet:True
#  
#  starty
#      type:int  arg:int  canGet:True  canSet:True
#  
#  acquire
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  magnification
#      type:double  arg:double  canGet:True  canSet:True
#  
#  scrollbars
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  scrollx
#      type:int  arg:int  canGet:True  canSet:True
#  
#  scrolly
#      type:int  arg:int  canGet:True  canSet:True
#  
#  palette
#      type:int  arg:int  canGet:True  canSet:True
#  
#  edge
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  camera
#      type:int  arg:int  canGet:True  canSet:True
#  
#  mode
#      type:int  arg:int  canGet:True  canSet:True
#  
#  rate
#      type:double  arg:double  canGet:True  canSet:True
#  
#  trigger
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  triggermode
#      type:int  arg:int  canGet:True  canSet:True
#  
#  triggercounter
#      type:int  arg:int  canGet:True  canSet:True
#  
#  triggerpolarity
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  asynch
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  packetsize
#      type:int  arg:int  canGet:True  canSet:True
#  
#  swapbytes
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  bayer
#      type:int  arg:int  canGet:True  canSet:True
#  
#  bayerlayout
#      type:int  arg:int  canGet:True  canSet:True
#  
#  display
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  flip
#      type:int  arg:int  canGet:True  canSet:True
#  
#  brightness
#      type:int  arg:int  canGet:True  canSet:True
#  
#  brightnesscontrol
#      type:int  arg:int  canGet:True  canSet:True
#  
#  autoexposureref
#      type:int  arg:int  canGet:True  canSet:True
#  
#  autoexposure
#      type:int  arg:int  canGet:True  canSet:True
#  
#  sharpness
#      type:int  arg:int  canGet:True  canSet:True
#  
#  sharpnesscontrol
#      type:int  arg:int  canGet:True  canSet:True
#  
#  gamma
#      type:int  arg:int  canGet:True  canSet:True
#  
#  gammacontrol
#      type:int  arg:int  canGet:True  canSet:True
#  
#  shutter
#      type:int  arg:int  canGet:True  canSet:True
#  
#  shuttercontrol
#      type:int  arg:int  canGet:True  canSet:True
#  
#  gain
#      type:int  arg:int  canGet:True  canSet:True
#  
#  gaincontrol
#      type:int  arg:int  canGet:True  canSet:True
#  
#  iris
#      type:int  arg:int  canGet:True  canSet:True
#  
#  iriscontrol
#      type:int  arg:int  canGet:True  canSet:True
#  
#  whitebalanceub
#      type:int  arg:int  canGet:True  canSet:True
#  
#  whitebalancevr
#      type:int  arg:int  canGet:True  canSet:True
#  
#  whitebalancecontrol
#      type:int  arg:int  canGet:True  canSet:True
#  
#  hue
#      type:int  arg:int  canGet:True  canSet:True
#  
#  huecontrol
#      type:int  arg:int  canGet:True  canSet:True
#  
#  saturation
#      type:int  arg:int  canGet:True  canSet:True
#  
#  saturationcontrol
#      type:int  arg:int  canGet:True  canSet:True
#  
#  focus
#      type:int  arg:int  canGet:True  canSet:True
#  
#  focuscontrol
#      type:int  arg:int  canGet:True  canSet:True
#  
#  zoom
#      type:int  arg:int  canGet:True  canSet:True
#  
#  zoomcontrol
#      type:int  arg:int  canGet:True  canSet:True
#  
#  pan
#      type:int  arg:int  canGet:True  canSet:True
#  
#  pancontrol
#      type:int  arg:int  canGet:True  canSet:True
#  
#  tilt
#      type:int  arg:int  canGet:True  canSet:True
#  
#  tiltcontrol
#      type:int  arg:int  canGet:True  canSet:True
#  
#  temperature
#      type:int  arg:int  canGet:True  canSet:True
#  
#  temperaturecontrol
#      type:int  arg:int  canGet:True  canSet:True
#  
#  opticalfilter
#      type:int  arg:int  canGet:True  canSet:True
#  
#  opticalfiltercontrol
#      type:int  arg:int  canGet:True  canSet:True
#  
#  triggerdelay
#      type:int  arg:int  canGet:True  canSet:True
#  
#  whiteshading
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  whiteshadingcontrol
#      type:int  arg:int  canGet:True  canSet:True
#  
#  overlaycolor
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  overlay
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  overlayfont
#      type:unsupported type 29  arg:unsupported type 29  canGet:True  canSet:True
#  
#  bkgcorrect
#      type:int  arg:int  canGet:True  canSet:True
#  
#  bkgname
#      type:string  arg:string  canGet:True  canSet:True
#  
#  triggersource
#      type:int  arg:int  canGet:True  canSet:True
#  
#  bitshift
#      type:int  arg:int  canGet:True  canSet:True
#  
#  timeout
#      type:int  arg:int  canGet:True  canSet:True
#  
#  antitearing
#      type:bool  arg:bool  canGet:True  canSet:True
#  
#  rotate
#      type:int  arg:int  canGet:True  canSet:True
#  
#  
#  
#  
#  METHODS
#  --------------------
#  QueryInterface
#      retType:  VT_VOID
#      params:
#          riid
#              in:True  out:False  optional:False  type:unsupported type 29
#          ppvObj
#              in:False  out:True  optional:False  type:unsupported type 26
#  
#  AddRef
#      retType:  int
#  
#  Release
#      retType:  int
#  
#  GetTypeInfoCount
#      retType:  VT_VOID
#      params:
#          pctinfo
#              in:False  out:True  optional:False  type:int
#  
#  GetTypeInfo
#      retType:  VT_VOID
#      params:
#          itinfo
#              in:True  out:False  optional:False  type:int
#          lcid
#              in:True  out:False  optional:False  type:int
#          pptinfo
#              in:False  out:True  optional:False  type:unsupported type 26
#  
#  GetIDsOfNames
#      retType:  VT_VOID
#      params:
#          riid
#              in:True  out:False  optional:False  type:unsupported type 29
#          rgszNames
#              in:True  out:False  optional:False  type:unsupported type 26
#          cNames
#              in:True  out:False  optional:False  type:int
#          lcid
#              in:True  out:False  optional:False  type:int
#          rgdispid
#              in:False  out:True  optional:False  type:int
#  
#  Invoke
#      retType:  VT_VOID
#      params:
#          dispidMember
#              in:True  out:False  optional:False  type:int
#          riid
#              in:True  out:False  optional:False  type:unsupported type 29
#          lcid
#              in:True  out:False  optional:False  type:int
#          wFlags
#              in:True  out:False  optional:False  type:int
#          pdispparams
#              in:True  out:False  optional:False  type:unsupported type 29
#          pvarResult
#              in:False  out:True  optional:False  type:VT_VARIANT
#          pexcepinfo
#              in:False  out:True  optional:False  type:unsupported type 29
#          puArgErr
#              in:False  out:True  optional:False  type:int
#  
#  Grab
#      retType:  int
#  
#  AboutBox
#      retType:  VT_VOID
#  
#  GetBrightnessMin
#      retType:  int
#  
#  GetBrightnessMax
#      retType:  int
#  
#  GetExposureMin
#      retType:  int
#  
#  GetExposureMax
#      retType:  int
#  
#  GetSharpnessMin
#      retType:  int
#  
#  GetSharpnessMax
#      retType:  int
#  
#  GetWhiteBalanceMin
#      retType:  int
#  
#  GetWhiteBalanceMax
#      retType:  int
#  
#  GetHueMin
#      retType:  int
#  
#  GetHueMax
#      retType:  int
#  
#  GetSaturationMin
#      retType:  int
#  
#  GetSaturationMax
#      retType:  int
#  
#  GetGammaMin
#      retType:  int
#  
#  GetGammaMax
#      retType:  int
#  
#  GetShutterMin
#      retType:  int
#  
#  GetShutterMax
#      retType:  int
#  
#  GetGainMin
#      retType:  int
#  
#  GetGainMax
#      retType:  int
#  
#  GetIrisMin
#      retType:  int
#  
#  GetIrisMax
#      retType:  int
#  
#  GetFocusMin
#      retType:  int
#  
#  GetFocusMax
#      retType:  int
#  
#  GetZoomMin
#      retType:  int
#  
#  GetZoomMax
#      retType:  int
#  
#  GetPanMin
#      retType:  int
#  
#  GetPanMax
#      retType:  int
#  
#  GetTiltMin
#      retType:  int
#  
#  GetTiltMax
#      retType:  int
#  
#  GetOpticalFilterMin
#      retType:  int
#  
#  GetOpticalFilterMax
#      retType:  int
#  
#  GetTriggerDelayMin
#      retType:  int
#  
#  GetTriggerDelayMax
#      retType:  int
#  
#  GetWhiteShadingMin
#      retType:  int
#  
#  GetWhiteShadingMax
#      retType:  int
#  
#  ReadBlock
#      retType:  VT_VOID
#      params:
#          offset
#              in:True  out:False  optional:False  type:int
#          pData
#              in:True  out:False  optional:False  type:int
#          nBytes
#              in:True  out:False  optional:False  type:int
#  
#  WriteBlock
#      retType:  VT_VOID
#      params:
#          offset
#              in:True  out:False  optional:False  type:int
#          pData
#              in:True  out:False  optional:False  type:int
#          nBytes
#              in:False  out:False  optional:False  type:int
#  
#  GetRawData
#      retType:  VT_VARIANT
#      params:
#          isPointer
#              in:True  out:False  optional:False  type:bool
#  
#  GetImageWindow
#      retType:  VT_VARIANT
#      params:
#          x
#              in:True  out:False  optional:False  type:int
#          y
#              in:True  out:False  optional:False  type:int
#          sx
#              in:True  out:False  optional:False  type:int
#          sy
#              in:True  out:False  optional:False  type:int
#  
#  GetPixel
#      retType:  int
#      params:
#          x
#              in:True  out:False  optional:False  type:int
#          y
#              in:True  out:False  optional:False  type:int
#  
#  GetRGBPixel
#      retType:  VT_VARIANT
#      params:
#          x
#              in:True  out:False  optional:False  type:int
#          y
#              in:True  out:False  optional:False  type:int
#  
#  GetImageLine
#      retType:  VT_VARIANT
#      params:
#          y
#              in:True  out:False  optional:False  type:int
#  
#  GetComponentLine
#      retType:  VT_VARIANT
#      params:
#          y
#              in:True  out:False  optional:False  type:int
#          component
#              in:True  out:False  optional:False  type:int
#  
#  GetImageData
#      retType:  VT_VARIANT
#  
#  GetComponentData
#      retType:  VT_VARIANT
#      params:
#          component
#              in:True  out:False  optional:False  type:int
#  
#  GetImagePointer
#      retType:  VT_VARIANT
#      params:
#          x
#              in:True  out:False  optional:False  type:int
#          y
#              in:True  out:False  optional:False  type:int
#  
#  SaveImage
#      retType:  VT_VOID
#      params:
#          filepath
#              in:True  out:False  optional:False  type:string
#          compression
#              in:True  out:False  optional:False  type:int
#  
#  SoftTrigger
#      retType:  VT_VOID
#      params:
#          newVal
#              in:True  out:False  optional:False  type:bool
#  
#  GetWidth
#      retType:  int
#  
#  GetHeight
#      retType:  int
#  
#  GetBytesPerPixel
#      retType:  int
#  
#  ReadRegister
#      retType:  int
#      params:
#          address
#              in:True  out:False  optional:False  type:int
#  
#  WriteRegister
#      retType:  VT_VOID
#      params:
#          address
#              in:True  out:False  optional:False  type:int
#          Val
#              in:True  out:False  optional:False  type:int
#  
#  GetCameraList
#      retType:  VT_VARIANT
#  
#  GetModeList
#      retType:  VT_VARIANT
#  
#  GetRateList
#      retType:  VT_VARIANT
#  
#  GetTriggerList
#      retType:  VT_VARIANT
#  
#  StartCapture
#      retType:  VT_VOID
#      params:
#          filepath
#              in:True  out:False  optional:False  type:string
#          timelapse
#              in:True  out:False  optional:False  type:double
#          playrate
#              in:True  out:False  optional:False  type:double
#  
#  StopCapture
#      retType:  VT_VOID
#  
#  LoadChannel
#      retType:  VT_VOID
#      params:
#          channel
#              in:True  out:False  optional:False  type:int
#  
#  SaveChannel
#      retType:  VT_VOID
#      params:
#          channel
#              in:True  out:False  optional:False  type:int
#  
#  GetMaxChannel
#      retType:  int
#  
#  GetIsoSpeed
#      retType:  int
#  
#  SetIsoSpeed
#      retType:  VT_VOID
#      params:
#          value
#              in:True  out:False  optional:False  type:int
#  
#  ShowProperties
#      retType:  VT_VOID
#      params:
#          EnableCamList
#              in:True  out:False  optional:False  type:bool
#          Page
#              in:True  out:False  optional:False  type:int
#  
#  GetDIB
#      retType:  int
#  
#  SetImageWindow
#      retType:  VT_VOID
#      params:
#          x
#              in:True  out:False  optional:False  type:int
#          y
#              in:True  out:False  optional:False  type:int
#          value
#              in:True  out:False  optional:False  type:VT_VARIANT
#  
#  GetTriggerInfo
#      retType:  VT_VARIANT
#  
#  GetF7Info
#      retType:  VT_VARIANT
#  
#  GetPicture
#      retType:  unsupported type 29
#  
#  Draw
#      retType:  VT_VOID
#  
#  OverlayRectangle
#      retType:  VT_VOID
#      params:
#          StartX
#              in:True  out:False  optional:False  type:int
#          StartY
#              in:True  out:False  optional:False  type:int
#          EndX
#              in:True  out:False  optional:False  type:int
#          EndY
#              in:True  out:False  optional:False  type:int
#          Width
#              in:True  out:False  optional:False  type:int
#  
#  OverlayEllipse
#      retType:  VT_VOID
#      params:
#          StartX
#              in:True  out:False  optional:False  type:int
#          StartY
#              in:True  out:False  optional:False  type:int
#          EndX
#              in:True  out:False  optional:False  type:int
#          EndY
#              in:True  out:False  optional:False  type:int
#          Width
#              in:True  out:False  optional:False  type:int
#  
#  OverlayLine
#      retType:  VT_VOID
#      params:
#          StartX
#              in:True  out:False  optional:False  type:int
#          StartY
#              in:True  out:False  optional:False  type:int
#          EndX
#              in:True  out:False  optional:False  type:int
#          EndY
#              in:True  out:False  optional:False  type:int
#          Width
#              in:True  out:False  optional:False  type:int
#  
#  OverlayText
#      retType:  VT_VOID
#      params:
#          x
#              in:True  out:False  optional:False  type:int
#          y
#              in:True  out:False  optional:False  type:int
#          str
#              in:True  out:False  optional:False  type:string
#  
#  OverlayClear
#      retType:  VT_VOID
#  
#  OverlayPixel
#      retType:  VT_VOID
#      params:
#          x
#              in:True  out:False  optional:False  type:int
#          y
#              in:True  out:False  optional:False  type:int
#  
#  GetItemList
#      retType:  VT_VARIANT
#      params:
#          item
#              in:True  out:False  optional:False  type:int
#          count
#              in:False  out:True  optional:False  type:int
#  
#  IsControls
#      retType:  int
#  
#  ReadPIO
#      retType:  int
#  
#  WritePIO
#      retType:  VT_VOID
#      params:
#          value
#              in:True  out:False  optional:False  type:int
#  
#  SetSIO
#      retType:  VT_VOID
#      params:
#          settings
#              in:True  out:False  optional:False  type:string
#  
#  ReadSIO
#      retType:  string
#      params:
#          count
#              in:True  out:False  optional:False  type:int
#          Timeout
#              in:False  out:False  optional:False  type:int
#  
#  WriteSIO
#      retType:  VT_VOID
#      params:
#          str
#              in:True  out:False  optional:False  type:string
#          Timeout
#              in:True  out:False  optional:False  type:int
#  
#  SetStrobe
#      retType:  VT_VOID
#      params:
#          index
#              in:True  out:False  optional:False  type:int
#          duration
#              in:True  out:False  optional:False  type:int
#          delay
#              in:True  out:False  optional:False  type:int
#          polarity
#              in:True  out:False  optional:False  type:bool
#  
#  LoadSettings
#      retType:  VT_VOID
#      params:
#          profile
#              in:True  out:False  optional:False  type:string
#  
#  SaveSettings
#      retType:  VT_VOID
#      params:
#          profile
#              in:True  out:False  optional:False  type:string
#  
#  DrawText
#      retType:  VT_VOID
#      params:
#          x
#              in:True  out:False  optional:False  type:int
#          y
#              in:True  out:False  optional:False  type:int
#          str
#              in:True  out:False  optional:False  type:string
#          red
#              in:True  out:False  optional:False  type:int
#          green
#              in:True  out:False  optional:False  type:int
#          blue
#              in:True  out:False  optional:False  type:int
#          opacity
#              in:True  out:False  optional:False  type:int
#  
#  DrawLine
#      retType:  VT_VOID
#      params:
#          X1
#              in:True  out:False  optional:False  type:int
#          Y1
#              in:True  out:False  optional:False  type:int
#          X2
#              in:True  out:False  optional:False  type:int
#          Y2
#              in:True  out:False  optional:False  type:int
#          Width
#              in:True  out:False  optional:False  type:int
#          red
#              in:True  out:False  optional:False  type:int
#          green
#              in:True  out:False  optional:False  type:int
#          blue
#              in:True  out:False  optional:False  type:int
#          opacity
#              in:True  out:False  optional:False  type:int
#  
#  DrawRectangle
#      retType:  VT_VOID
#      params:
#          X1
#              in:True  out:False  optional:False  type:int
#          Y1
#              in:True  out:False  optional:False  type:int
#          X2
#              in:True  out:False  optional:False  type:int
#          Y2
#              in:True  out:False  optional:False  type:int
#          Width
#              in:True  out:False  optional:False  type:int
#          red
#              in:True  out:False  optional:False  type:int
#          green
#              in:True  out:False  optional:False  type:int
#          blue
#              in:True  out:False  optional:False  type:int
#          opacity
#              in:True  out:False  optional:False  type:int
#  
#  DrawEllipse
#      retType:  VT_VOID
#      params:
#          X1
#              in:True  out:False  optional:False  type:int
#          Y1
#              in:True  out:False  optional:False  type:int
#          X2
#              in:True  out:False  optional:False  type:int
#          Y2
#              in:True  out:False  optional:False  type:int
#          Width
#              in:True  out:False  optional:False  type:int
#          red
#              in:True  out:False  optional:False  type:int
#          green
#              in:True  out:False  optional:False  type:int
#          blue
#              in:True  out:False  optional:False  type:int
#          opacity
#              in:True  out:False  optional:False  type:int
#  
#  DrawPixel
#      retType:  VT_VOID
#      params:
#          x
#              in:True  out:False  optional:False  type:int
#          y
#              in:True  out:False  optional:False  type:int
#          red
#              in:True  out:False  optional:False  type:int
#          green
#              in:True  out:False  optional:False  type:int
#          blue
#              in:True  out:False  optional:False  type:int
#          opacity
#              in:True  out:False  optional:False  type:int
#  
#  GetHistogram
#      retType:  VT_VARIANT
#      params:
#          component
#              in:True  out:False  optional:False  type:int
#          bins
#              in:True  out:False  optional:False  type:int
#          step
#              in:True  out:False  optional:False  type:int
#  
#  GetImageStat
#      retType:  VT_VARIANT
#      params:
#          component
#              in:True  out:False  optional:False  type:int
#          step
#              in:True  out:False  optional:False  type:int
#  
#  SetROI
#      retType:  VT_VOID
#      params:
#          X1
#              in:True  out:False  optional:False  type:int
#          Y1
#              in:True  out:False  optional:False  type:int
#          X2
#              in:True  out:False  optional:False  type:int
#          Y2
#              in:True  out:False  optional:False  type:int
#          l1
#              in:True  out:False  optional:False  type:int
#          l2
#              in:True  out:False  optional:False  type:int
#  
#  GetROI
#      retType:  VT_VARIANT
#  
#  SaveBkg
#      retType:  VT_VOID
#      params:
#          Mode
#              in:True  out:False  optional:False  type:int
#          frames
#              in:True  out:False  optional:False  type:int
#  
#  ShowCompressionDlg
#      retType:  VT_VOID
#  
#  GetCodecList
#      retType:  VT_VARIANT
#  
#  SetCodec
#      retType:  VT_VOID
#      params:
#          name
#              in:True  out:False  optional:False  type:string
#          quality
#              in:True  out:False  optional:False  type:int
#          datarate
#              in:True  out:False  optional:False  type:int
#          keyframe
#              in:True  out:False  optional:False  type:int
#  
#  ShowCodecDlg
#      retType:  VT_VOID
#  
#  GetCodec
#      retType:  string
#  
#  
#  
#  
#  EVENTS
#  --------------------
#  FrameAcquired
#      retType:  unsupported type 25
#  
#  Timeout
#      retType:  unsupported type 25
#  
#  FrameDropped
#      retType:  unsupported type 25
#  
#  MouseDown
#      retType:  unsupported type 25
#      params:
#          x
#              in:True  out:False  optional:False  type:int
#          y
#              in:True  out:False  optional:False  type:int
#  
#  MouseUp
#      retType:  unsupported type 25
#      params:
#          x
#              in:True  out:False  optional:False  type:int
#          y
#              in:True  out:False  optional:False  type:int
#  
#  MouseMove
#      retType:  unsupported type 25
#      params:
#          x
#              in:True  out:False  optional:False  type:int
#          y
#              in:True  out:False  optional:False  type:int
#  
#  Scroll
#      retType:  unsupported type 25
#      params:
#          ScrollX
#              in:True  out:False  optional:False  type:int
#          ScrollY
#              in:True  out:False  optional:False  type:int
#  
#  FormatChanged
#      retType:  unsupported type 25
#  
#  MouseDblClick
#      retType:  unsupported type 25
#      params:
#          x
#              in:True  out:False  optional:False  type:int
#          y
#              in:True  out:False  optional:False  type:int
#  
#  FrameAcquiredX
#      retType:  unsupported type 25
#  
#  CameraPlugged
#      retType:  unsupported type 25
#      params:
#          Camera
#              in:True  out:False  optional:False  type:int
#  
#  CameraUnplugged
#      retType:  unsupported type 25
#      params:
#          Camera
#              in:True  out:False  optional:False  type:int
#  
#  
#  
#  
